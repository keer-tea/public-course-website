import{_ as s,l as i,k as a,ae as n}from"./chunks/framework.BFFW23Ds.js";const g=JSON.parse('{"title":"因下载使用 nvm 而引发的学习事件","description":"","frontmatter":{"label":"npm"},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"安装 nvm","slug":"安装-nvm","link":"#安装-nvm","children":[]}],"relativePath":"useful/npm, yarn, pnpm/因下载使用 nvm 而引发的学习事件.md","filePath":"useful/npm, yarn, pnpm/因下载使用 nvm 而引发的学习事件.md","lastUpdated":1709394628000}'),t={name:"useful/npm, yarn, pnpm/因下载使用 nvm 而引发的学习事件.md"},l=n('<h1 id="因下载使用-nvm-而引发的学习事件" tabindex="-1">因下载使用 nvm 而引发的学习事件 <a class="header-anchor" href="#因下载使用-nvm-而引发的学习事件" aria-label="Permalink to &quot;因下载使用 nvm 而引发的学习事件&quot;">​</a></h1><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>了解并学会了如何使用下载工具 curl</li><li>了解如何设置 Path 环境变量（控制面板 -&gt; 系统和安全 -&gt; 系统 -&gt; 高级系统设置）</li><li>nvm 设置 node 或 nvm 镜像（用来下载 node 的源、用来下载项目依赖的源）</li><li>文件路径中 <code>~</code> 符号的含义</li><li>node 历史版本获取链接</li><li>nvm-windows 常用命令</li><li>依赖缓存的获取</li><li>npm 脚本的执行原理</li><li>.npmrc 配置文件作用</li></ul><p>一开始在 github 上找到 <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noreferrer">nvm</a> 这个仓库。然后就按照 readme 文档，先下载了一个下载工具 curl，然后再用 curl 来下载 nvm 这个仓库。再然后，出现了一些问题，就顺带复习或学习了其它的技能。</p><h2 id="安装-nvm" tabindex="-1">安装 nvm <a class="header-anchor" href="#安装-nvm" aria-label="Permalink to &quot;安装 nvm&quot;">​</a></h2><p>首先下载 <a href="https://curl.se/windows/" target="_blank" rel="noreferrer">curl</a> (windows 版)，下载后解压缩，将解压缩后的目录添加到系统的 Path 环境变量中。</p><p>然后执行脚本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><p>这个脚本会把 nvm 仓库下载到目录 <code>~/.nvm</code> 中，（<code>~</code> 在 Unix 系统中表示用户的 home 目录，在 windows 就表示随便一个被指定了的目录了）</p><p>然后将下列代码添加到 <code>~/.bashrc</code> 文件中并执行。（如果不存在 <code>~/.bashrc</code> 文件，需要自己创建下，否则会安装失败）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$([ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot; ] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.nvm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> printf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %s &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XDG_CONFIG_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/nvm&quot;)&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # This loads nvm</span></span></code></pre></div><p>验证是否安装成功</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">command</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvm</span></span></code></pre></div><p>最后是成功了的，但是使用起来非常卡，而且有时候切换 node 版本不成功。于是我又发现了 nvm-windows，使用起来更加的迅捷，流程。</p>',14),e=[l];function h(p,k,r,d,o,c){return a(),i("div",null,e)}const F=s(t,[["render",h]]);export{g as __pageData,F as default};
