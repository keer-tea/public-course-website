import{_ as s,l as i,k as a,ae as n}from"./chunks/framework.BFFW23Ds.js";const c=JSON.parse('{"title":"进阶","description":"","frontmatter":{},"headers":[{"level":2,"title":"Java 中的 this","slug":"java-中的-this","link":"#java-中的-this","children":[]},{"level":2,"title":"实例方法或构造器中使用当前对象的成员变量、成员方法","slug":"实例方法或构造器中使用当前对象的成员变量、成员方法","link":"#实例方法或构造器中使用当前对象的成员变量、成员方法","children":[]},{"level":2,"title":"调用类中的构造器","slug":"调用类中的构造器","link":"#调用类中的构造器","children":[]},{"level":2,"title":"面向对象的特征之一：继承","slug":"面向对象的特征之一-继承","link":"#面向对象的特征之一-继承","children":[{"level":3,"title":"父类在上，子类在下","slug":"父类在上-子类在下","link":"#父类在上-子类在下","children":[]},{"level":3,"title":"继承的语法","slug":"继承的语法","link":"#继承的语法","children":[]},{"level":3,"title":"细节说明","slug":"细节说明","link":"#细节说明","children":[]},{"level":3,"title":"子类不能直接访问父类中私有的（private）的成员变量和方法","slug":"子类不能直接访问父类中私有的-private-的成员变量和方法","link":"#子类不能直接访问父类中私有的-private-的成员变量和方法","children":[]},{"level":3,"title":"在 Java 中，继承的关键字用的是“extends”，即子类不是父类的子集，而是对父类的“扩展”","slug":"在-java-中-继承的关键字用的是-extends-即子类不是父类的子集-而是对父类的-扩展","link":"#在-java-中-继承的关键字用的是-extends-即子类不是父类的子集-而是对父类的-扩展","children":[]},{"level":3,"title":"Java 支持多层继承","slug":"java-支持多层继承","link":"#java-支持多层继承","children":[]},{"level":3,"title":"Java 只支持单继承，不支持多重继承","slug":"java-只支持单继承-不支持多重继承","link":"#java-只支持单继承-不支持多重继承","children":[]},{"level":3,"title":"练习 1","slug":"练习-1","link":"#练习-1","children":[]},{"level":3,"title":"练习 2","slug":"练习-2","link":"#练习-2","children":[]},{"level":3,"title":"练习 3","slug":"练习-3","link":"#练习-3","children":[]}]},{"level":2,"title":"方法的重写","slug":"方法的重写","link":"#方法的重写","children":[{"level":3,"title":"举例","slug":"举例","link":"#举例","children":[]},{"level":3,"title":"重写方法的要求","slug":"重写方法的要求","link":"#重写方法的要求","children":[]},{"level":3,"title":"方法重载与重写的区别","slug":"方法重载与重写的区别","link":"#方法重载与重写的区别","children":[]}]},{"level":2,"title":"再谈封装性中的 4 种权限修饰","slug":"再谈封装性中的-4-种权限修饰","link":"#再谈封装性中的-4-种权限修饰","children":[{"level":3,"title":"private","slug":"private","link":"#private","children":[]},{"level":3,"title":"缺省","slug":"缺省","link":"#缺省","children":[]},{"level":3,"title":"protected","slug":"protected","link":"#protected","children":[]},{"level":3,"title":"public","slug":"public","link":"#public","children":[]}]},{"level":2,"title":"关键字 super","slug":"关键字-super","link":"#关键字-super","children":[{"level":3,"title":"简单说明","slug":"简单说明","link":"#简单说明","children":[]},{"level":3,"title":"子类中调用父类被重写的方法","slug":"子类中调用父类被重写的方法","link":"#子类中调用父类被重写的方法","children":[]},{"level":3,"title":"子类中调用父类中同名的成员变量","slug":"子类中调用父类中同名的成员变量","link":"#子类中调用父类中同名的成员变量","children":[]},{"level":3,"title":"子类构造器中调用父类构造器","slug":"子类构造器中调用父类构造器","link":"#子类构造器中调用父类构造器","children":[]}]},{"level":2,"title":"总结 this 与 super","slug":"总结-this-与-super","link":"#总结-this-与-super","children":[{"level":3,"title":"this 和 super 的意义","slug":"this-和-super-的意义","link":"#this-和-super-的意义","children":[]},{"level":3,"title":"this 和 super 的使用格式","slug":"this-和-super-的使用格式","link":"#this-和-super-的使用格式","children":[]}]},{"level":2,"title":"子类对象实例化全过程","slug":"子类对象实例化全过程","link":"#子类对象实例化全过程","children":[]},{"level":2,"title":"面向对象特征之一：多态性","slug":"面向对象特征之一-多态性","link":"#面向对象特征之一-多态性","children":[{"level":3,"title":"对象的多态性","slug":"对象的多态性","link":"#对象的多态性","children":[]},{"level":3,"title":"多态的理解","slug":"多态的理解","link":"#多态的理解","children":[]},{"level":3,"title":"为什么需要多态性（polymorphism）？","slug":"为什么需要多态性-polymorphism","link":"#为什么需要多态性-polymorphism","children":[]},{"level":3,"title":"多态的好处和弊端","slug":"多态的好处和弊端","link":"#多态的好处和弊端","children":[]},{"level":3,"title":"如何向上或向下转型","slug":"如何向上或向下转型","link":"#如何向上或向下转型","children":[]},{"level":3,"title":"instanceof 关键字","slug":"instanceof-关键字","link":"#instanceof-关键字","children":[]}]},{"level":2,"title":"Object 类的使用","slug":"object-类的使用","link":"#object-类的使用","children":[{"level":3,"title":"理解根父类","slug":"理解根父类","link":"#理解根父类","children":[]},{"level":3,"title":"Object 类的方法","slug":"object-类的方法","link":"#object-类的方法","children":[]}]},{"level":2,"title":"native 关键字的理解","slug":"native-关键字的理解","link":"#native-关键字的理解","children":[]}],"relativePath":"javadoc/Java 的面向对象编程/2. 进阶.md","filePath":"javadoc/Java 的面向对象编程/2. 进阶.md","lastUpdated":1709816942000}'),l={name:"javadoc/Java 的面向对象编程/2. 进阶.md"},h=n("",207),p=[h];function k(t,e,E,r,d,g){return a(),i("div",null,p)}const F=s(l,[["render",k]]);export{c as __pageData,F as default};
