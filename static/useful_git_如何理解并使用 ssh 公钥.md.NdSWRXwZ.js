import{_ as s,l as a,k as e,ae as i}from"./chunks/framework.BFFW23Ds.js";const g=JSON.parse('{"title":"如何理解并使用 ssh 公钥","description":"","frontmatter":{},"headers":[{"level":2,"title":"理解","slug":"理解","link":"#理解","children":[]},{"level":2,"title":"gitee 中设置 ssh","slug":"gitee-中设置-ssh","link":"#gitee-中设置-ssh","children":[{"level":3,"title":"生成 SSH 公钥","slug":"生成-ssh-公钥","link":"#生成-ssh-公钥","children":[]},{"level":3,"title":"设置账户 SSH 公钥","slug":"设置账户-ssh-公钥","link":"#设置账户-ssh-公钥","children":[]},{"level":3,"title":"可能报错","slug":"可能报错","link":"#可能报错","children":[]}]}],"relativePath":"useful/git/如何理解并使用 ssh 公钥.md","filePath":"useful/git/如何理解并使用 ssh 公钥.md","lastUpdated":1709816942000}'),n={name:"useful/git/如何理解并使用 ssh 公钥.md"},p=i(`<h1 id="如何理解并使用-ssh-公钥" tabindex="-1">如何理解并使用 ssh 公钥 <a class="header-anchor" href="#如何理解并使用-ssh-公钥" aria-label="Permalink to &quot;如何理解并使用 ssh 公钥&quot;">​</a></h1><h2 id="理解" tabindex="-1">理解 <a class="header-anchor" href="#理解" aria-label="Permalink to &quot;理解&quot;">​</a></h2><p>SSH（Secure Shell，安全外壳）是一种网络安全协议，通过加密和认证机制实现安全的访问和文件传输等业务。</p><p>首先一台电脑可以生产一个公钥和私钥，公钥可以保存我们信任的第三方平台服务器里（比如 gitee）,而私钥只保存在我们自己的电脑上。</p><p>公钥和私钥保证了客户端和服务器之间的数据传输安全。</p><p>windows 默认支持生成 ssh 公钥和私钥。</p><h2 id="gitee-中设置-ssh" tabindex="-1">gitee 中设置 ssh <a class="header-anchor" href="#gitee-中设置-ssh" aria-label="Permalink to &quot;gitee 中设置 ssh&quot;">​</a></h2><h3 id="生成-ssh-公钥" tabindex="-1">生成 SSH 公钥 <a class="header-anchor" href="#生成-ssh-公钥" aria-label="Permalink to &quot;生成 SSH 公钥&quot;">​</a></h3><blockquote><p>Windows 用户建议使用 Windows PowerShell 或者 Git Bash，在 命令提示符 下无 cat 和 ls 命令。</p></blockquote><p>1、通过命令 ssh-keygen 生成 SSH Key：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复杂</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;my lenovo computer&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者简单</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mechrev_computer&quot;</span></span></code></pre></div><ul><li><code>-t</code> key 类型</li><li><code>-C</code> 注释</li></ul><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ ssh-keygen -t ed25519 -C &quot;my lenovo computer&quot;</span></span>
<span class="line"><span>Generating public/private ed25519 key pair.</span></span>
<span class="line"><span>Enter file in which to save the key (/c/Users/LuxCurl-user1/.ssh/id_ed25519):</span></span>
<span class="line"><span>Created directory &#39;/c/Users/LuxCurl-user1/.ssh&#39;.</span></span>
<span class="line"><span>Enter passphrase (empty for no passphrase):</span></span>
<span class="line"><span>Enter same passphrase again:</span></span>
<span class="line"><span>Your identification has been saved in /c/Users/LuxCurl-user1/.ssh/id_ed25519</span></span>
<span class="line"><span>Your public key has been saved in /c/Users/LuxCurl-user1/.ssh/id_ed25519.pub</span></span>
<span class="line"><span>The key fingerprint is:</span></span>
<span class="line"><span>SHA256:jokuES4Jx8eWDrgVDGJCjMPpM1F0WNfGVQY61ln2I+s my lenovo computer</span></span>
<span class="line"><span>The key&#39;s randomart image is:</span></span>
<span class="line"><span>+--[ED25519 256]--+</span></span>
<span class="line"><span>|O=+ooo .o .oo=   |</span></span>
<span class="line"><span>|*=o.. .  +o = .  |</span></span>
<span class="line"><span>|.+.o .  .+ o . o |</span></span>
<span class="line"><span>|o+* =   . .   o .|</span></span>
<span class="line"><span>|.*o*    S    .   |</span></span>
<span class="line"><span>|+ o .. +    .    |</span></span>
<span class="line"><span>| . .. o .    E   |</span></span>
<span class="line"><span>|  ..             |</span></span>
<span class="line"><span>|   ..            |</span></span>
<span class="line"><span>+----[SHA256]-----+</span></span></code></pre></div><ul><li>中间通过三次回车键确定</li></ul><p>2、查看生成的 SSH 公钥和私钥：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/</span></span></code></pre></div><p>输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>id_ed25519  id_ed25519.pub</span></span></code></pre></div><ul><li>私钥文件 <code>id_ed25519</code></li><li>公钥文件 <code>id_ed25519.pub</code></li></ul><p>3、读取公钥文件 ~/.ssh/id_ed25519.pub：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519.pub</span></span></code></pre></div><p>输出，如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-ed25519</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AAAA</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">***</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5B</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Gitee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Key</span></span></code></pre></div><p>复制终端输出的公钥。</p><h3 id="设置账户-ssh-公钥" tabindex="-1">设置账户 SSH 公钥 <a class="header-anchor" href="#设置账户-ssh-公钥" aria-label="Permalink to &quot;设置账户 SSH 公钥&quot;">​</a></h3><p>用户可以通过主页右上角「个人设置」-&gt;「安全设置」-&gt;「SSH 公钥」-&gt;「添加公钥」 ，添加生成的 public key 添加到当前账户中。</p><blockquote><p>需要注意：添加公钥需要验证用户密码</p></blockquote><p>通过 ssh -T 测试，输出 SSH Key 绑定的用户名：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@gitee.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USERNAME!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> You&#39;ve successfully authenticated, but GITEE.COM does not provide shell access.</span></span></code></pre></div><p>在添加完公钥后，用户可以在「个人设置」-&gt;「安全设置」-&gt;「SSH 公钥」浏览查看当前账户已经添加的 SSH 公钥，并对公钥进行管理/删除操作。</p><p>这些步骤完成后，就可以使用 ssh 的方式克隆、拉取、推送代码了。</p><h3 id="可能报错" tabindex="-1">可能报错 <a class="header-anchor" href="#可能报错" aria-label="Permalink to &quot;可能报错&quot;">​</a></h3><p>git 如何解决 The authenticity of host can&#39;t be established</p><p>新生成密钥的时候，git clone 或者 push 的时候，可能会报这样的错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>The authenticity of host &#39;gitee.com (xxx.xxx.xxx.xxx)&#39; can&#39;t be established.</span></span>
<span class="line"><span>ECDSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxxxx.</span></span></code></pre></div><p>Google 之后明白，文件夹内少了一个 known_hosts 文件，本来密钥文件应该是三个，现在只有两个，便报了这样的错误，此时输入 yes 回车之后，生成了缺少了的 known_hosts 文件，便可解决这个问题：</p>`,37),l=[p];function t(h,o,d,c,r,k){return e(),a("div",null,l)}const F=s(n,[["render",t]]);export{g as __pageData,F as default};
