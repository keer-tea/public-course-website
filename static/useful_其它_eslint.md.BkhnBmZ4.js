import{_ as s,l as i,k as a,ae as n}from"./chunks/framework.BFFW23Ds.js";const E=JSON.parse('{"title":"eslint","description":"","frontmatter":{"label":["eslint"]},"headers":[{"level":2,"title":"给代码的 window 上添加全局变量","slug":"给代码的-window-上添加全局变量","link":"#给代码的-window-上添加全局变量","children":[]},{"level":2,"title":"给项目配置 eslint","slug":"给项目配置-eslint","link":"#给项目配置-eslint","children":[]},{"level":2,"title":"eslint 检查单一的文件或目录","slug":"eslint-检查单一的文件或目录","link":"#eslint-检查单一的文件或目录","children":[]}],"relativePath":"useful/其它/eslint.md","filePath":"useful/其它/eslint.md","lastUpdated":1709394628000}'),l={name:"useful/其它/eslint.md"},t=n(`<h1 id="eslint" tabindex="-1">eslint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;eslint&quot;">​</a></h1><h2 id="给代码的-window-上添加全局变量" tabindex="-1">给代码的 window 上添加全局变量 <a class="header-anchor" href="#给代码的-window-上添加全局变量" aria-label="Permalink to &quot;给代码的 window 上添加全局变量&quot;">​</a></h2><p>比如，你的 window 对象上实际挂载了 BUL 属性，你可以通过 window.BUL 点语法访问，但 eslint 却报错说 BUL 不在 window 上。</p><p>这时候，你可以设置 .eslintrc 文件：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;env&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;browser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;es2021&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;globals&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;BUL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;readonly&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="给项目配置-eslint" tabindex="-1">给项目配置 eslint <a class="header-anchor" href="#给项目配置-eslint" aria-label="Permalink to &quot;给项目配置 eslint&quot;">​</a></h2><p>只需要执行下面的命令，再根据提示选择相应的配置就行了。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @eslint/config</span></span></code></pre></div><h2 id="eslint-检查单一的文件或目录" tabindex="-1">eslint 检查单一的文件或目录 <a class="header-anchor" href="#eslint-检查单一的文件或目录" aria-label="Permalink to &quot;eslint 检查单一的文件或目录&quot;">​</a></h2><p>执行命令 <code>npm init @eslint/config</code> 配置好 eslint 后，如果你想检查单一的文件或目录，可以执行像下面这样的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yourfile.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project-dir/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file1.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eslint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yourfile.js</span></span></code></pre></div>`,11),e=[t];function h(p,k,d,r,o,c){return a(),i("div",null,e)}const F=s(l,[["render",h]]);export{E as __pageData,F as default};
