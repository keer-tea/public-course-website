import{_ as s,l as i,k as a,ae as n}from"./chunks/framework.BFFW23Ds.js";const E=JSON.parse('{"title":"让 vue-cli 创建的项目启动时在控制台新增可访问服务地址","description":"","frontmatter":{"label":["vue","vue-cli"]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"解决","slug":"解决","link":"#解决","children":[]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}],"relativePath":"useful/vue-cli/让 vue-cli 创建的项目启动时在控制台新增可访问服务地址.md","filePath":"useful/vue-cli/让 vue-cli 创建的项目启动时在控制台新增可访问服务地址.md","lastUpdated":1709394628000}'),p={name:"useful/vue-cli/让 vue-cli 创建的项目启动时在控制台新增可访问服务地址.md"},l=n(`<h1 id="让-vue-cli-创建的项目启动时在控制台新增可访问服务地址" tabindex="-1">让 vue-cli 创建的项目启动时在控制台新增可访问服务地址 <a class="header-anchor" href="#让-vue-cli-创建的项目启动时在控制台新增可访问服务地址" aria-label="Permalink to &quot;让 vue-cli 创建的项目启动时在控制台新增可访问服务地址&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>现在我们公司的项目是用 vue-cli 创建的，包管理器使用的是 npm。因为我们的项目是投放到移动端的，所以会非常频繁的在手机上预览调试查看日志。</p><p>在启动项目后，network 服务地址只有两个。</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-29-43.png" alt="" loading="lazy"></p><p>但是在实际工作中，经常需要自己在链接上拼接一些参数。像这样：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>http://192.168.3.124:8000?page=xxx&amp;id=xxx</span></span></code></pre></div><p>以往都是先复制不含参数的 url，然后粘贴到浏览器输入框，再手动拼接上需要的参数。</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-31-48.png" alt="" loading="lazy"></p><p>感觉有点麻烦，能不能缩减步骤，在项目启动时多打印一些信息，比如已经拼接上参数的服务地址呢？</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><p>我在 vue-cli 项目里全局搜索 <code>App running at:</code>，发现如果想让 vue-cli 创建的项目启动时在控制台新增可访问服务地址，只需要修改文件 <code>node_modules\\@vue\\cli-service\\lib\\commands\\serve.js</code> 就可以了。</p><p>依葫芦画瓢，只需要改动一点点代码就行了：</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-39-30.png" alt="" loading="lazy"></p><p>为了更具扩展性，也为了尽量少改源代码我在项目根目录创建了一个 testlink.config.js 文件：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 一个获取当前电脑 ip 的包，需要下载</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> address.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> network</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`http://\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:8000\`</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;production&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;12124124&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;69678968&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> serveUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/main.html?cid=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logList</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;调试&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, serveUrl],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;jira&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`https://jira.com.cn?page=xxx&amp;id=xxx\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wiki&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`https://wiki.com.cn?page=xxx&amp;id=xxx\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;更多信息查看 README.md&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;... ...&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  logList</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>然后修改 <code>node_modules\\@vue\\cli-service\\lib\\commands\\serve.js</code> 文件：</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-44-14.png" alt="" loading="lazy"></p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-45-08.png" alt="" loading="lazy"></p><p>加了这几行代码，大工就告成了。</p><p>重新启动一下项目看下效果：</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-10-46-40.png" alt="" loading="lazy"></p><p>不错，是我想要的效果。这样就可以直接双击复制链接，粘贴到到浏览器的插件中，再转为二维码，用手机扫一下就可以复制到链接了。</p><p>但是还没完，还需要用 <a href="https://www.npmjs.com/package/patch-package" target="_blank" rel="noreferrer">patch-package</a> 包来保存我们对包的修改，不然下次重新下载依赖改动就消失了。</p><p>因为我们只在开发中用到，所以下载到 devDependencies 中。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patch-package</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><blockquote><p>如果用的 yarn，还需要下载 postinstall-postinstall。如果用的 pnpm，就不需要用 patch-package 包了，pnpm 自带 patch 包功能。了解更多参考文档。</p></blockquote><p>然后在 package.json 中添加脚本：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;scripts&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ &quot;postinstall&quot;: &quot;patch-package&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>在我们已经修改包后，执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patch-package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vue/cli-service</span></span></code></pre></div><p>然后就会自动在项目根目录下生成一个 patches 目录。这样就成功了。</p><h2 id="扩展" tabindex="-1">扩展 <a class="header-anchor" href="#扩展" aria-label="Permalink to &quot;扩展&quot;">​</a></h2><p>如何让浏览器把 url 或文本转为二维码，让手机扫码获取到该值。可以使用<a href="https://cli.im/" target="_blank" rel="noreferrer">草料二维码</a>。或者使用浏览器插件，我使用的是 postwoman，它带有转二维码功能。</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/2023-08-09-11-04-59.png" alt="" loading="lazy"></p>`,35),t=[l];function e(h,k,c,d,r,g){return a(),i("div",null,t)}const u=s(p,[["render",e]]);export{E as __pageData,u as default};
