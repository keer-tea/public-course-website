import{_ as s,l as i,k as a,ae as l}from"./chunks/framework.BFFW23Ds.js";const C=JSON.parse('{"title":"05 排序与分页","description":"","frontmatter":{},"headers":[{"level":2,"title":"排序数据","slug":"排序数据","link":"#排序数据","children":[{"level":3,"title":"排序规则","slug":"排序规则","link":"#排序规则","children":[]},{"level":3,"title":"单列排序","slug":"单列排序","link":"#单列排序","children":[]},{"level":3,"title":"多列排序","slug":"多列排序","link":"#多列排序","children":[]}]},{"level":2,"title":"分页","slug":"分页","link":"#分页","children":[{"level":3,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":3,"title":"实现规则","slug":"实现规则","link":"#实现规则","children":[]},{"level":3,"title":"拓展","slug":"拓展","link":"#拓展","children":[]}]}],"relativePath":"javadoc/MySql/05 排序与分页.md","filePath":"javadoc/MySql/05 排序与分页.md","lastUpdated":1709816942000}'),h={name:"javadoc/MySql/05 排序与分页.md"},n=l(`<h1 id="_05-排序与分页" tabindex="-1">05 排序与分页 <a class="header-anchor" href="#_05-排序与分页" aria-label="Permalink to &quot;05 排序与分页&quot;">​</a></h1><h2 id="排序数据" tabindex="-1">排序数据 <a class="header-anchor" href="#排序数据" aria-label="Permalink to &quot;排序数据&quot;">​</a></h2><h3 id="排序规则" tabindex="-1">排序规则 <a class="header-anchor" href="#排序规则" aria-label="Permalink to &quot;排序规则&quot;">​</a></h3><p>使用 ORDER BY 子句排序。ASC（ascend）代表升序，DESC（descend）代表降序。</p><p>ORDER BY 子句在 SELECT 语句的结尾。</p><p>默认升序。</p><h3 id="单列排序" tabindex="-1">单列排序 <a class="header-anchor" href="#单列排序" aria-label="Permalink to &quot;单列排序&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   last_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> job_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hire_date</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hire_date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   last_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> job_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hire_date</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hire_date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> employee_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">12</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> annsal</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> annsal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="多列排序" tabindex="-1">多列排序 <a class="header-anchor" href="#多列排序" aria-label="Permalink to &quot;多列排序&quot;">​</a></h3><p>下面的 sql 表示的是，首先通过 department_id 进行排序，如果 department_id 相同，再通过 salary 进行排序。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last_name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> department_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>可以使用不在 SELECT 列表中的列排序。</p><p>在对多列进行排序的时候，首先排序的第一列必须有相同的列值，才会对第二列进行排序。如果第 一列数据中所有值都是唯一的，将不再对第二列进行排序。</p><h2 id="分页" tabindex="-1">分页 <a class="header-anchor" href="#分页" aria-label="Permalink to &quot;分页&quot;">​</a></h2><h3 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h3><p>查询返回的记录太多了，查看起来很不方便，怎么样能够实现分页查询呢？</p><p>表里有 4 条数据，我们只想要显示第 2、3 条数据怎么办呢？</p><h3 id="实现规则" tabindex="-1">实现规则 <a class="header-anchor" href="#实现规则" aria-label="Permalink to &quot;实现规则&quot;">​</a></h3><p>分页原理：</p><p>所谓分页显示，就是将数据库中的结果集，一段一段显示出来需要的条件。</p><p>MySQL 中使用 LIMIT 实现分页。</p><p>格式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LIMIT [位置偏移量,] 行数</span></span></code></pre></div><p>第一个“位置偏移量”参数指示 MySQL 从哪一行开始显示，是一个可选参数，如果不指定“位置偏移量”，将会从表中的第一条记录开始（第一条记录的位置偏移量是 0，第二条记录的位置偏移量是 1，以此类推）；第二个参数“行数”指示返回的记录条数。</p><p>举例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 前10条记录：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0,10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果不指定“位置偏移量”，将会从表中的第一条记录开始。所以下面的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 也是查询前</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 条记录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 第11至20条记录：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10,10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">--</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 第21至30条记录：</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 表名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LIMIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 20,10</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>MySQL 8.0 中可以使用“LIMIT 3 OFFSET 4”，OFFSET 后面的值表示偏移量，LIMIT 后面的值表示获取条数（从偏移量开始）。意思是获取从第 5 条记录开始后面的 3 条记录，和“LIMIT 4,3;”返回的结果相同。</p></div><p>分页显式公式：（当前页数 - 1）* 每页条数，每页条数。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LIMIT(PageNo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PageSize, PageSize;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注意</p><p>LIMIT 子句必须放在整个 SELECT 语句的最后！</p></div><p>使用 LIMIT 的好处：</p><p>约束返回结果的数量可以减少数据表的网络传输量，也可以 提升查询效率。如果我们知道返回结果只有 1 条，就可以使用 LIMIT 1，告诉 SELECT 语句只需要返回一条记录即可。这样的好处就是 SELECT 不需 要扫描完整的表，只需要检索到一条符合条件的记录即可返回。</p><h3 id="拓展" tabindex="-1">拓展 <a class="header-anchor" href="#拓展" aria-label="Permalink to &quot;拓展&quot;">​</a></h3><p>在不同的 DBMS 中使用的关键字可能不同。在 MySQL、PostgreSQL、MariaDB 和 SQLite 中使用 LIMIT 关键字，而且需要放到 SELECT 语句的最后面。</p><p>如果是 SQL Server 和 Access，需要使用 TOP 关键字，比如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TOP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hp_max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heros</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hp_max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span></span></code></pre></div><p>如果是 DB2，使用 FETCH FIRST 5 ROWS ONLY 这样的关键字：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hp_max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heros</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hp_max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FETCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FIRST</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ROWS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ONLY</span></span></code></pre></div><p>如果是 Oracle，你需要基于 ROWNUM 来统计行数：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rownum,last_name,salary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> employees</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rownum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>需要说明的是，这条语句是先取出来前 5 条数据行，然后再按照 hp_max 从高到低的顺序进行排序。但 这样产生的结果和上述方法的并不一样。我会在后面讲到子查询，你可以使用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rownum,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last_name,salary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    SELECT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last_name,salary</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> employees</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ORDER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> salary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DESC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WHERE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rownum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>得到与上述方法一致的结果。</p>`,46),t=[n];function p(e,k,F,d,r,g){return a(),i("div",null,t)}const y=s(h,[["render",p]]);export{C as __pageData,y as default};
