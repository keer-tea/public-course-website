import{_ as a,l as e,k as t,ae as l}from"./chunks/framework.BFFW23Ds.js";const m=JSON.parse('{"title":"面试题：有 1000 瓶水，其中有一瓶有毒，小白鼠只要尝一点带毒的水 24 小时后就会死亡，给你 24 小时时间，至少要多少只小白鼠才可以试出哪瓶有毒？","description":"","frontmatter":{"label":["algorithm"]},"headers":[{"level":2,"title":"二分法","slug":"二分法","link":"#二分法","children":[]},{"level":2,"title":"程序表达","slug":"程序表达","link":"#程序表达","children":[]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]}],"relativePath":"useful/算法/1000 瓶水.md","filePath":"useful/算法/1000 瓶水.md","lastUpdated":1709816942000}'),p={name:"useful/算法/1000 瓶水.md"},i=l('<h1 id="面试题-有-1000-瓶水-其中有一瓶有毒-小白鼠只要尝一点带毒的水-24-小时后就会死亡-给你-24-小时时间-至少要多少只小白鼠才可以试出哪瓶有毒" tabindex="-1">面试题：有 1000 瓶水，其中有一瓶有毒，小白鼠只要尝一点带毒的水 24 小时后就会死亡，给你 24 小时时间，至少要多少只小白鼠才可以试出哪瓶有毒？ <a class="header-anchor" href="#面试题-有-1000-瓶水-其中有一瓶有毒-小白鼠只要尝一点带毒的水-24-小时后就会死亡-给你-24-小时时间-至少要多少只小白鼠才可以试出哪瓶有毒" aria-label="Permalink to &quot;面试题：有 1000 瓶水，其中有一瓶有毒，小白鼠只要尝一点带毒的水 24 小时后就会死亡，给你 24 小时时间，至少要多少只小白鼠才可以试出哪瓶有毒？&quot;">​</a></h1><h2 id="二分法" tabindex="-1">二分法 <a class="header-anchor" href="#二分法" aria-label="Permalink to &quot;二分法&quot;">​</a></h2><p>采用不断二分的思想，逐渐逼近那瓶有毒的水。因为是 2 的指数，所以查找起来会非常快。</p><p>假设有 8 杯水，其中一杯有毒。</p><p>假设先分成两部分水。先喝混合第一部分的水，无毒。</p><p>接着把第二部分水分成两部分。先喝第一部分的水，无毒。</p><p>接着把第二部分水分成两部分。先喝第一部分的水，无毒。</p><p>说明最后一杯水是有毒的。</p><p>再解释下，上面分完两部分水后，总是选择了喝第一部分的水。其实喝第一部分水还是喝第二部分水，都可以。<strong>目的都是为了分辨有毒的那杯水在那一部分。</strong></p><p>但是这道题是不能用小白鼠一只一只去试毒水的。因为有时间限制。有没有一种办法把水混合，让全部小白鼠喝一次，通过结果推断出哪杯水有毒呢？有的。</p><h2 id="程序表达" tabindex="-1">程序表达 <a class="header-anchor" href="#程序表达" aria-label="Permalink to &quot;程序表达&quot;">​</a></h2><p>那怎么用程序来表达这个思想呢？</p><p>看下面这张图。用二进制对每一杯水进行编号。</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/ad1ace6e0ec14a41a8b19d12899a1282.png" alt="" loading="lazy"></p><p>喝第一部分水，编号为 0001、0011、0101、0111。</p><p>喝第二部分水，编号为 0010、0011、0110、0111。</p><p>喝第三部分水，编号为 0100、0101、0110、0111。</p><p>第四部分水不用喝了，可以根据排除法判断是否有毒。</p><p>然后三只小白鼠各自喝下一、二、三部分水，通过结果推断出哪部分水有毒。</p><p>假设第三部分水有毒。而一、二部分水都没有毒，所以可以推断出是 0100 号水有毒。</p><p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/img/15e943ee102f416db27fbdaf9529433d.png" alt="" loading="lazy"></p><h2 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h2><p>通过这个二进制给水编号的方法，我们居然可以不用一步一步的判断哪部分水有毒。而是直接通过最终的结果推导出哪杯水有毒。</p><p>不得不感叹，这二进制真神奇。</p>',24),s=[i];function r(n,o,c,d,h,_){return t(),e("div",null,s)}const f=a(p,[["render",r]]);export{m as __pageData,f as default};
