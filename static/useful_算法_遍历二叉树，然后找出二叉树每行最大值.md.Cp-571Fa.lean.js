import{_ as s,l as i,k as a,ae as n}from"./chunks/framework.BFFW23Ds.js";const o=JSON.parse('{"title":"遍历二叉树，然后找出二叉树每行最大值","description":"","frontmatter":{"label":["algorithm"]},"headers":[{"level":2,"title":"帮助理解的例子","slug":"帮助理解的例子","link":"#帮助理解的例子","children":[]},{"level":2,"title":"遍历出二叉树的所有路径","slug":"遍历出二叉树的所有路径","link":"#遍历出二叉树的所有路径","children":[]},{"level":2,"title":"找出二叉树每行最大值","slug":"找出二叉树每行最大值","link":"#找出二叉树每行最大值","children":[{"level":3,"title":"方案 1","slug":"方案-1","link":"#方案-1","children":[]},{"level":3,"title":"方案 2","slug":"方案-2","link":"#方案-2","children":[]}]}],"relativePath":"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md","filePath":"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md","lastUpdated":1709394628000}'),h={name:"useful/算法/遍历二叉树，然后找出二叉树每行最大值.md"},l=n("",37),p=[l];function t(k,e,r,E,d,g){return a(),i("div",null,p)}const c=s(h,[["render",t]]);export{o as __pageData,c as default};
