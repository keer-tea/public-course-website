import{_ as e,l as a,k as l,ae as s}from"./chunks/framework.BFFW23Ds.js";const g=JSON.parse('{"title":"IDEA 的代码和工程管理","description":"","frontmatter":{},"headers":[{"level":2,"title":"IDEA 项目结构","slug":"idea-项目结构","link":"#idea-项目结构","children":[]},{"level":2,"title":"Project 和 Module 的概念","slug":"project-和-module-的概念","link":"#project-和-module-的概念","children":[]},{"level":2,"title":"Module 和 Package","slug":"module-和-package","link":"#module-和-package","children":[]},{"level":2,"title":"创建 Module","slug":"创建-module","link":"#创建-module","children":[]},{"level":2,"title":"删除 Module","slug":"删除-module","link":"#删除-module","children":[]},{"level":2,"title":"将项目识别为 Module","slug":"将项目识别为-module","link":"#将项目识别为-module","children":[]},{"level":2,"title":"单独设置模块项目编码","slug":"单独设置模块项目编码","link":"#单独设置模块项目编码","children":[]}],"relativePath":"useful/代码编辑器/IDEA 的代码和工程管理.md","filePath":"useful/代码编辑器/IDEA 的代码和工程管理.md","lastUpdated":1713791748000}'),o={name:"useful/代码编辑器/IDEA 的代码和工程管理.md"},n=s(`<h1 id="idea-的代码和工程管理" tabindex="-1">IDEA 的代码和工程管理 <a class="header-anchor" href="#idea-的代码和工程管理" aria-label="Permalink to &quot;IDEA 的代码和工程管理&quot;">​</a></h1><h2 id="idea-项目结构" tabindex="-1">IDEA 项目结构 <a class="header-anchor" href="#idea-项目结构" aria-label="Permalink to &quot;IDEA 项目结构&quot;">​</a></h2><p>层级关系：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project(工程) - module(模块) - package(包) - class(类)</span></span></code></pre></div><p>具体的解释：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>一个 project 中可以创建多个 module</span></span>
<span class="line"><span></span></span>
<span class="line"><span>一个 module 中可以创建多个 package</span></span>
<span class="line"><span></span></span>
<span class="line"><span>一个 package 中可以创建多个 class</span></span></code></pre></div><blockquote><p>这些结构的划分，是为了方便管理功能代码。</p></blockquote><h2 id="project-和-module-的概念" tabindex="-1">Project 和 Module 的概念 <a class="header-anchor" href="#project-和-module-的概念" aria-label="Permalink to &quot;Project 和 Module 的概念&quot;">​</a></h2><p>在 IntelliJ IDEA 中，提出了 Project 和 Module 这两个概念。</p><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/assets/java/idea_a_26.jpg"><p>在 IntelliJ IDEA 中 Project 是最顶级的结构单元，然后就是 Module。目前，主流的大型项目结构基本都是多 Module 的结构，这类项目一般是按功能划分的，比如：user-core-module、user-facade-module 和 user-hessian-module 等等，模块之间彼此可以相互依赖，有着不可分割的业务关系。因此，对于一个 Project 来说：</p><ul><li>当为单 Module 项目的时候，这个单独的 Module 实际上就是一个 Project。</li><li>当为多 Module 项目的时候，多个模块处于同一个 Project 之中，此时彼此之间具有互相依赖的关联关系。</li><li>当然多个模块没有建立依赖关系的话，也可以作为单独一个“小项目”运行。</li></ul><h2 id="module-和-package" tabindex="-1">Module 和 Package <a class="header-anchor" href="#module-和-package" aria-label="Permalink to &quot;Module 和 Package&quot;">​</a></h2><p>在一个 module 下，可以声明多个包（package），一般命名规范如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 不要有中文</span></span>
<span class="line"><span>2. 不要以数字开头</span></span>
<span class="line"><span>3. 给包取名时一般都是公司域名倒着写，而且都是小写</span></span>
<span class="line"><span>  比如：网址是 www.baidu.com</span></span>
<span class="line"><span>  那么我们的 package 包名应该写成：com.baidu.子名字。</span></span></code></pre></div><h2 id="创建-module" tabindex="-1">创建 Module <a class="header-anchor" href="#创建-module" aria-label="Permalink to &quot;创建 Module&quot;">​</a></h2><p>右击项目，创建 Module。 <img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/assets/java/idea_a_27.png"></p><h2 id="删除-module" tabindex="-1">删除 Module <a class="header-anchor" href="#删除-module" aria-label="Permalink to &quot;删除 Module&quot;">​</a></h2><p>删除 Module 需要两步，第一步先移除 Remove Module，第二步再删除 Delete Module。</p><h2 id="将项目识别为-module" tabindex="-1">将项目识别为 Module <a class="header-anchor" href="#将项目识别为-module" aria-label="Permalink to &quot;将项目识别为 Module&quot;">​</a></h2><p>有些文件夹没有被识别为 Module，可以在 Project Structure 里 Import Module。</p><h2 id="单独设置模块项目编码" tabindex="-1">单独设置模块项目编码 <a class="header-anchor" href="#单独设置模块项目编码" aria-label="Permalink to &quot;单独设置模块项目编码&quot;">​</a></h2><img src="https://my-course-public.oss-cn-shanghai.aliyuncs.com/public/assets/java/idea_a_28.png">`,23),t=[n];function i(d,c,p,u,r,h){return l(),a("div",null,t)}const _=e(o,[["render",i]]);export{g as __pageData,_ as default};
