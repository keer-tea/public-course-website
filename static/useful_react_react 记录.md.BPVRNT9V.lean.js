import{_ as t,l as a,k as c,D as e,s as r}from"./chunks/framework.BFFW23Ds.js";const P=JSON.parse('{"title":"react 记录","description":"","frontmatter":{},"headers":[{"level":2,"title":"关于 react 函数式组件的 re-render","slug":"关于-react-函数式组件的-re-render","link":"#关于-react-函数式组件的-re-render","children":[]}],"relativePath":"useful/react/react 记录.md","filePath":"useful/react/react 记录.md","lastUpdated":1709394628000}'),n={name:"useful/react/react 记录.md"},s=e("h1",{id:"react-记录",tabindex:"-1"},[r("react 记录 "),e("a",{class:"header-anchor",href:"#react-记录","aria-label":'Permalink to "react 记录"'},"​")],-1),d=e("h2",{id:"关于-react-函数式组件的-re-render",tabindex:"-1"},[r("关于 react 函数式组件的 re-render "),e("a",{class:"header-anchor",href:"#关于-react-函数式组件的-re-render","aria-label":'Permalink to "关于 react 函数式组件的 re-render"'},"​")],-1),o=e("p",null,"当一个 react 的父组件通过 state 发生重渲染时会发生什么呢？",-1),l=e("p",null,"从代码角度来看，这个父组件函数会重新执行一遍，如果不作其它处理，它的子组件函数也会重新执行一遍。这就是 react 所谓的 re-render。",-1),i=e("p",null,"需要注意的是，re-render 时会将新返回的虚拟 dom 节点和老的虚拟 dom 节点进行比较，对发生改变的节点使用 setAttribute 等 api 进行精准更新。所以 re-render 的性能消耗并没有想象中的那么大。",-1),_=[s,d,o,l,i];function h(p,u,f,m,k,x){return c(),a("div",null,_)}const $=t(n,[["render",h]]);export{P as __pageData,$ as default};
