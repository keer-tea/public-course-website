import{_ as a,l as s,k as i,ae as n}from"./chunks/framework.BFFW23Ds.js";const E=JSON.parse('{"title":"第一天","description":"","frontmatter":{"label":"java"},"headers":[{"level":2,"title":"JDK、JRE","slug":"jdk、jre","link":"#jdk、jre","children":[]},{"level":2,"title":"JAVA_HOME 的 bin 目录","slug":"java-home-的-bin-目录","link":"#java-home-的-bin-目录","children":[]},{"level":2,"title":"第一个 java 程序","slug":"第一个-java-程序","link":"#第一个-java-程序","children":[]}],"relativePath":"javacode/before/day-1.md","filePath":"javacode/before/day-1.md","lastUpdated":1709816942000}'),l={name:"javacode/before/day-1.md"},e=n(`<h1 id="第一天" tabindex="-1">第一天 <a class="header-anchor" href="#第一天" aria-label="Permalink to &quot;第一天&quot;">​</a></h1><h2 id="jdk、jre" tabindex="-1">JDK、JRE <a class="header-anchor" href="#jdk、jre" aria-label="Permalink to &quot;JDK、JRE&quot;">​</a></h2><p>因为 Java 程序必须运行在 JVM 之上，所以，我们第一件事情就是安装 JDK。</p><p>搜索 JDK 17，确保从 Oracle 的官网下载最新的稳定版 JDK：</p><p>安装完 JDK 后，需要设置一个名为 %JAVA_HOME%，值为 jdk 的 bin 目录的环境变量。打开命令提示符窗口，输入命令 <code>java -version</code></p><p><strong>名词解释：</strong></p><p>初学者学 Java，经常听到 JDK、JRE 这些名词，它们到底是啥？</p><ul><li>JDK: Java Development Kit</li><li>JRE: Java Runtime Environment</li></ul><p>简单地说，JRE 就是运行 Java 字节码的虚拟机。但是，如果只有 Java 源码，要编译成 Java 字节码，就需要 JDK，因为 JDK 除了包含 JRE，还提供了编译器、调试器等开发工具。</p><p>二者关系如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  ┌─    ┌──────────────────────────────────┐</span></span>
<span class="line"><span>  │     │     Compiler, debugger, etc.     │</span></span>
<span class="line"><span>  │     └──────────────────────────────────┘</span></span>
<span class="line"><span> JDK ┌─ ┌──────────────────────────────────┐</span></span>
<span class="line"><span>  │  │  │                                  │</span></span>
<span class="line"><span>  │ JRE │      JVM + Runtime Library       │</span></span>
<span class="line"><span>  │  │  │                                  │</span></span>
<span class="line"><span>  └─ └─ └──────────────────────────────────┘</span></span>
<span class="line"><span>        ┌───────┐┌───────┐┌───────┐┌───────┐</span></span>
<span class="line"><span>        │Windows││ Linux ││ macOS ││others │</span></span>
<span class="line"><span>        └───────┘└───────┘└───────┘└───────┘</span></span></code></pre></div><h2 id="java-home-的-bin-目录" tabindex="-1">JAVA_HOME 的 bin 目录 <a class="header-anchor" href="#java-home-的-bin-目录" aria-label="Permalink to &quot;JAVA_HOME 的 bin 目录&quot;">​</a></h2><p>细心的童鞋还可以在 JAVA_HOME 的 bin 目录下找到很多可执行文件：</p><ul><li>java：这个可执行程序其实就是 JVM，运行 Java 程序，就是启动 JVM，然后让 JVM 执行指定的编译后的代码；</li><li>javac：这是 Java 的编译器，它用于把 Java 源码文件（以 .java 后缀结尾）编译为 Java 字节码文件（以 .class 后缀结尾）；</li><li>jar：用于把一组 .class 文件打包成一个 .jar 文件，便于发布；</li><li>javadoc：用于从 Java 源码中自动提取注释并生成文档；</li><li>jdb：Java 调试器，用于开发阶段的运行调试。</li></ul><h2 id="第一个-java-程序" tabindex="-1">第一个 java 程序 <a class="header-anchor" href="#第一个-java-程序" aria-label="Permalink to &quot;第一个 java 程序&quot;">​</a></h2><p>我们来编写第一个 Java 程序。</p><p>打开文本编辑器，输入以下代码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Java 规定，某个类定义的 public static void main(String[] args) 是 Java 程序的固定入口方法，因此，Java 程序总是从 main 方法开始执行。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>文件名必须是 Hello.java</p><p>Java 源码本质上是一个文本文件，我们需要先用 javac 把 Hello.java 编译成字节码文件 Hello.class，然后，用 java 命令执行这个字节码文件 <code>java Hello</code>（不要执行 java Hello.class）。</p>`,20),p=[e];function t(h,r,d,o,c,k){return i(),s("div",null,p)}const J=a(l,[["render",t]]);export{E as __pageData,J as default};
